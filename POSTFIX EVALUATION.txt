#include<bits/stdc++.h>
#include<stack>
using namespace std;

int evaluate(int v1, int v2, char oper)
{
	if (oper == '*')
		return v1 * v2;
	else if (oper == '/')
		return v1 / v2;
	else if (oper == '+')
		return v1 + v2;
	else
		return v1 - v2;
}

int main()
{

#ifndef ONLINE_JUDGE
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#endif

	string str;
	cin >> str;

	int n = str.length();

	stack<int>val;
	stack<string>infix;
	stack<string>prefix;

	for (int i = 0; i < n; i++) {

		if (str[i] == '*' || str[i] == '+' || str[i] == '/' || str[i] == '-')
		{
			char oper = str[i];
			int v2 = val.top();
			val.pop();
			int v1 = val.top();
			val.pop();
			int res = evaluate(v1, v2, oper);
			val.push(res);

			string v4 = infix.top();
			infix.pop();
			string v3 = infix.top();
			infix.pop();

			string infEval = "(" + v3 + oper + v4 + ")";
			infix.push(infEval);

			string v5 = prefix.top();
			prefix.pop();
			string v6 = prefix.top();
			prefix.pop();
			string preEval = oper + v5 + v6;
			prefix.push(preEval);
		}
		else
		{
			val.push(str[i] - '0');
			infix.push(str[i] + "");
			prefix.push(str[i] + "");
		}
	}
	cout << "value is " << val.top() << endl;
	cout << "infix expression is" << infix.top() << endl;
	cout << "prefix expression is" << prefix.top() << endl;
	return 0;
}










