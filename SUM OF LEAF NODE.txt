#include<bits/stdc++.h>
#include<algorithm>
using namespace std;

struct node{
	int data;
	node *left,*right;
	node(int x)
	   {
	   	data = x;
	   	left = right = NULL;
	   }
};

void inorder(node *root)
    {
    	if(!root)
    	   return;
    	inorder(root->left);
    	cout<<root->data<<" ";
    	inorder(root->right);
	}

void sumLeaf(node *root)
    {
    	queue<node*>q;
    	int sum=0;
    	q.push(root);
    	while(!q.empty())
    	    {
    	    	int n = q.size();
    	    	while(n--)
    	    	    {
    	    	    	node *temp = q.front();
    	    	    	q.pop();
    	    	    	if(temp->left==NULL&&temp->right==NULL)
    	    	    	   sum+=temp->data;
    	    	    	else
    	    	    	{
    	    	    		if(temp->left)
    	    	    	   q.push(temp->left);
    	    	    	   if(temp->right)
    	    	    	   q.push(temp->right);
					}
			}
		}
		cout<<sum;
	}
	
int main()
    {
    node *root = new node(15);
	root->left = new node(10);
	root->right = new node(20);
	root->left->left = new node(8);
	root->left->right = new node(12);
	root->right->left = new node(16);
	root->right->right = new node(25);
	root->right->right->right=new node(33);
	sumLeaf(root);
    //inorder(root);
    return 0;
	}