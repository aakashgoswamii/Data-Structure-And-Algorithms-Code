#include <bits/stdc++.h> 
using namespace std; 

class Node { 
public: 
	int data; 
	Node* next; 
}; 

Node* newNode(int data) 
{ 
	Node* new_node = new Node(); 
	new_node->data = data; 
	new_node->next = NULL; 
	return new_node; 
} 

void reverse(Node **head)
    {
    	Node *curr=*head,*prev=NULL,*Next;
    	while(curr)
    	    {
    	    	Next = curr->next;
    	    	curr->next = prev;
    	    	prev = curr;
    	    	curr = Next;
			}
		*head = prev;
	}

void push(Node** head_ref, int new_data) 
{ 

	Node* new_node = newNode(new_data); 


	new_node->next = (*head_ref); 

	
	(*head_ref) = new_node; 
} 


Node* addTwoLists(Node* first, Node* second) 
{ 

	Node* res = NULL; 
	Node *temp, *prev = NULL; 
	int carry = 0, sum; 
     reverse(&first); reverse(&second);
 
	while (first != NULL 
		|| second != NULL) { 
		sum = carry + (first ? first->data : 0) 
			+ (second ? second->data : 0); 

		carry = (sum >= 10) ? 1 : 0; 

		
		sum = sum % 10; 

		temp = newNode(sum); 

	
		if (res == NULL) 
			res = temp; 



		else
			prev->next = temp; 


		prev = temp; 

		if (first) 
			first = first->next; 
		if (second) 
			second = second->next; 
	} 

	if (carry > 0) 
		temp->next = newNode(carry); 

	return res; 
} 

void printList(Node* node) 
{ 
	while (node != NULL) { 
		cout << node->data << " "; 
		node = node->next; 
	} 
	cout << endl; 
} 


int main(void) 
{ 
	Node* res = NULL; 
	Node* first = NULL; 
	Node* second = NULL; 


	push(&first, 6); 
	push(&first, 4); 
	push(&first, 5); 
	push(&first, 4); 
	push(&first, 3); 
	printf("First List is "); 
	printList(first); 

	// create second list 8->4 
	push(&second, 5); 
	push(&second, 4); 
	cout << "Second List is "; 
	printList(second); 

	// Add the two lists and see result 
	res = addTwoLists(first, second); 
	cout << "Resultant list is "; 
	reverse(&res);
	printList(res); 

	return 0; 
} 


