#include<bits/stdc++.h>
using namespace std;
#define vertex 7


void printGraph(vector<int>adj[],int n)
    {
        for(int i=0;i<=n;i++)
            {
                for(auto x:adj[i])
                    cout<<x<<" ";
                cout<<endl;
            }
    }

vector<int>bfsOfGraph(vector<int>adj[])
    {
        vector<int>visited(vertex+1,0);
        vector<int>bfs;
        
        for(int i=1;i<=vertex;i++)
            {
                if(visited[i]==0)
                    {
                        queue<int>q;
                        q.push(i);
                        visited[i] = 1;
                        while(!q.empty())
                            {
                                int node = q.front();
                                q.pop();
                                bfs.push_back(node);
                                for(auto x:adj[node])
                                    {
                                        if(visited[x]==0)
                                            {
                                                q.push(x);
                                                visited[x] = 1;
                                            }
                                    }
                            }
                    }
            }
        return bfs;
    }

void graph(int u,int v,vector<int>adj[])
    {
        adj[u].push_back(v);
        adj[v].push_back(u);
    }
    
int main()  
    {
        vector<int>adj[vertex+1];
        
        graph(1,2,adj);
        graph(2,3,adj);
        graph(2,7,adj);
        graph(3,5,adj);
        graph(5,7,adj);
        graph(4,6,adj);
        vector<int>ans = bfsOfGraph(adj);
        for(int i=0;i<ans.size();i++)
            cout<<ans[i]<<" ";
        // printGraph(adj,vertex);
        return 0;
    }
    
    
    
    
    
    
    