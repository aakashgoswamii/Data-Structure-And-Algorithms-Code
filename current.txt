#include<bits/stdc++.h>
using namespace std;

void findUnion(vector<int>arr1,vector<int>arr2,int n ,int m)
    {
        int i = 0, j = 0;
        while(i<n && j<m)
            {
                if(arr1[i]>arr2[j]){
                   cout<<arr2[j++]<<" ";
                   if(arr2[j] == arr2[j-1])
                      while(arr2[j] == arr2[j-1])
                            j++;
                }
                
                else if(arr1[i]<arr2[j]){
                   cout<<arr1[i++]<<" ";
                   if(arr1[i] == arr1[i-1])
                      while(arr1[i] == arr1[i-1])
                            i++;
                }
                else
                   {
                       cout<<arr1[i++]<<" ";
                       j++;
                        if(arr1[i] == arr1[i-1])
                      while(arr1[i] == arr1[i-1])
                            i++;
                      if(arr2[j] == arr2[j-1])
                         while(arr2[j] == arr2[j-1])
                            j++;
                   }
            }
        while(i<n){
           cout<<arr1[i++]<<" ";
           if(arr1[i] == arr1[i-1])
                      while(arr1[i] == arr1[i-1])
                            i++;
        }
        
        while(j<m){
           cout<<arr2[j++]<<" ";
           if(arr2[j] == arr2[j-1])
            while(arr2[j] == arr2[j-1])
                j++;
        }
        return;
    }

int main() 
    {
        vector<int>arr1 = {1,2,2,2,2,4,4,4,5,5,5,5,6,8,8,12,17};
        vector<int>arr2 = {2,3,5,5,5,7,9,9,9};
        int n = arr1.size();
        int m = arr2.size();
        findUnion(arr1,arr2,n,m);
        return 0;
    }