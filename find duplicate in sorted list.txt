#include<bits/stdc++.h>
using namespace std;

class node{
    public:
        int data;
        node *next;
};

void removeDuplicate(node **head)
    {
        node *curr = *head;
        node *nextPtr;
        node *prev=NULL;
        while(curr!=NULL&&curr->next!=NULL)
            {
                if(curr->data == curr->next->data)
                   {
                    nextPtr = curr->next->next;
                    free(curr->next);
                    curr ->next= nextPtr;
                   }
                else
                    curr = curr->next;
            }
        return;
    }

void reverse(node **secondHalf)
    {
        node *curr = *secondHalf;
        node *prev = NULL;
        node *nextN;
        
        while(curr!=NULL)
            {
                nextN = curr->next;
                curr->next = prev;
                prev = curr;
                curr = nextN;
            }
        *secondHalf = prev;
    }
bool compare(node *head1,node *head2)
    {
        while(head1&&head2)
            {
                if(head1->data!=head2->data)
                   return false;
                
                head1 = head1->next;
                head2 = head2->next;
            }
        return true;
    }
bool isPalindrome(node *head)
    {
        node *slowPtr = head;
        node *fastPtr = head;
        node *prevSlow;
        node *midNode;
        node *secondHalf;
        
        if(head!=NULL&&head->next!=NULL)
            {
                while(fastPtr&&fastPtr->next)
                    {
                        fastPtr = fastPtr->next->next;
                        prevSlow = slowPtr;
                        slowPtr = slowPtr->next;
                    }
            }
        if(fastPtr!=NULL)
           {
               midNode = slowPtr;
               slowPtr = slowPtr->next;
           }
           prevSlow->next = NULL;
           
        secondHalf = slowPtr;
        reverse(&secondHalf);
        bool ans =  compare(head,secondHalf);
        reverse(&secondHalf);
        return ans;
    }

void printList(node *head)
    {
        while(head!=NULL)
            {
                cout<<head->data<<" ";
                head = head->next;
            }
        return;
    }

void push(node **head,int value)
    {
        node *newNode = new node();
        newNode->data = value;
        newNode->next = *head;
        *head = newNode;
        return;
    }

int main()
    {
        node *head = NULL;
            push(&head,2);
            push(&head,2);
            push(&head,2);
            push(&head,2);
            push(&head,2);
            push(&head,2);
        printList(head);
        cout<<endl;
        removeDuplicate(&head);
        printList(head);
        // if(isPalindrome(head))
        //   cout<<"yes! palindrome"<<endl;
        // else
        //   cout<<"No ! not palindrome"<<endl;
        return 0;
    }