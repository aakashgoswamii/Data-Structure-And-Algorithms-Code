#include<bits/stdc++.h>
using namespace std;

int validSubarray(vector<int>&arr,int n){
    stack<int>st;
    int ans = 0;
    for(int i=n-1;i>=0;i--){
        int val = arr[i];
        
        while(st.size()>0&&val>=arr[st.top()])
            st.pop();
        
        int si = n;
        
        if(st.size()>0)
            si = st.top();
        st.push(i);
        ans+=si-i; 
    }  
    return ans;
}

int main()
    {
        vector<int>arr = {1,4,2,2,1};
        int n = arr.size();
        cout<<validSubarray(arr,n)<<endl;
        return 0;
    }


///    Traversing from begining approach.

#include<bits/stdc++.h>
using namespace std;

int validSubarray(vector<int>&arr,int n){
    stack<int>st;
    int ans = 0;
    for(int i=0;i<n;i++){
        int val = arr[i];
        while(st.size()>0&&val<arr[st.top()])
            st.pop();
            
        st.push(i);
        ans+=st.size();
    }
    return ans;
}

int main()
    {
        vector<int>arr = {1,4,2,5,3};
        int n = arr.size();
        cout<<validSubarray(arr,n)<<endl;
        return 0;
    }