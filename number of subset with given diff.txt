#include<bits/stdc++.h>
#include<vector>
using namespace std;


int subsetDiff(vector<int>&arr, int n , int s1)
{
	vector<vector<int>>dp(n + 1, vector<int>( s1 + 1));

	for (int i = 0; i <= n; i++)
		dp[i][0] = 1;

	for (int i = 1; i <= s1; i++)
		dp[0][i] = 0;

	for (int i = 1; i <= n; i++) {
		for (int j = 1; j <= s1; j++)
		{
			if (arr[i - 1] > j)
				dp[i][j] = dp[i - 1][j];
			else
			{
				dp[i][j] = dp[i - 1][j - arr[i - 1]] + dp[i - 1][j];
			}
		}
	}
	return dp[n][s1];
}

int main()
{
	vector<int>arr = {3, 1, 2, 3};
	int diff = 1;
	int sum = accumulate(arr.begin(), arr.end(), 0);
	int n = arr.size();
	int s1 = (sum + diff) / 2;
	cout << subsetDiff(arr, n, s1);
	return 0;
}