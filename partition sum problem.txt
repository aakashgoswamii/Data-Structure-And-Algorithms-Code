#include<bits/stdc++.h>
using namespace std;


bool checkForPartititon(vector<int>&set, int n, int sum , int target_sum)
{
	if (n == 0 || n == 1)
		return false;

	if (target_sum == 0)
		return true;

	if (set[n - 1] > target_sum)
		return false;

	return checkForPartititon(set, n - 1, sum, target_sum - set[n - 1]) || checkForPartititon(set, n - 1, sum, target_sum);
}

bool solve(vector<int>&set, int n, int sum)
{
	if (sum % 2 != 0)
		return false;

	int target_sum = sum / 2;

	return checkForPartititon(set, n, sum, target_sum);
}

int main()
{
	vector<int>set = {1, 5, 11, 5};
	int n = set.size();
	int sum = accumulate(set.begin(), set.end(), 0);
	if (solve(set, n, sum) == true)
		cout << "true" << endl;
	else
		cout << "false" << endl;
	return 0;
}