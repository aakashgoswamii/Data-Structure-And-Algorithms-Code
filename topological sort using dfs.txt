#include<bits/stdc++.h>
using namespace std;
#define vertex 6

void topoSort(int node,vector<int>&vis,stack<int>&s,vector<int>adj[])
    {
        vis[node] = 1;
        
        for(auto x:adj[node])
            {
                if(vis[x]==0)
                    {
                        topoSort(x,vis,s,adj);
                    }
            }
        s.push(node);
    }
    
stack<int>topologicalSort(vector<int>adj[])
    {
        vector<int>vis(vertex,0);
        stack<int>s;
        for(int i=0;i<vertex;i++)
            {
                if(vis[i]==0)
                    {
                        topoSort(i,vis,s,adj);
                    }
            }
        return s;
    }

void addEdge(int u,int v,vector<int>adj[])
    {
        adj[u].push_back(v);
        return;
    }
    
int main()
    {
        vector<int>adj[vertex+1];
        addEdge(5,0,adj);
        addEdge(4,0,adj);
        addEdge(4,1,adj);
        addEdge(3,1,adj);
        addEdge(2,3,adj);
        addEdge(5,2,adj);
        
        stack<int>ans = topologicalSort(adj);
        while(!ans.empty())
            {
                cout<<ans.top()<<" ";
                ans.pop();
            }
        return 0;
    }